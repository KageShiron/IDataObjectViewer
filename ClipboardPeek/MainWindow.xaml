<Fluent:RibbonWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:Fluent="urn:fluent-ribbon"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClipboardPeek"
        xmlns:text="clr-namespace:System.Text;assembly=mscorlib"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        xmlns:dataFormatLib="clr-namespace:DataFormatLib;assembly=DataFormatLib"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        x:Class="ClipboardPeek.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="700">
    <DockPanel>
        <Fluent:Ribbon DockPanel.Dock="Top">
            <Fluent:RibbonTabItem Header="Home">
                <Fluent:RibbonGroupBox Header="クリップボード">
                    <Fluent:Button Header="貼り付け&#xA;(全形式)" 
                                   Command="{Binding LoadFromClipboardCommand, Mode=OneWay}"
                           Icon="Images\Green.png"
                           LargeIcon="Images\GreenLarge.png" />
                    <Fluent:Button Header="貼り付け&#xA;(形式指定)" 
                                   Command="{Binding LoadFromClipboardCommand, Mode=OneWay}"
                           Icon="Images\Green.png"
                           LargeIcon="Images\GreenLarge.png" />
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="ドロップ">
                    <Fluent:Button>
                        <Fluent:Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="#DFF" BorderBrush="#999" SnapsToDevicePixels="True" BorderThickness="1" Margin="2,2,2,2" Padding="5,5,5,5">
                                    <TextBlock VerticalAlignment="Center"><Run Text="ここにドロップ"/><LineBreak /><Run Text="(全形式)"/></TextBlock>
                                </Border>
                            </ControlTemplate>
                        </Fluent:Button.Template>
                    </Fluent:Button>
                    <Fluent:Button>
                        <Fluent:Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="#DFF" BorderBrush="#999" SnapsToDevicePixels="True" BorderThickness="1" Margin="2,2,2,2" Padding="5,5,5,5">
                                    <TextBlock VerticalAlignment="Center"><Run Text="ここにドロップ"/><LineBreak/><Run Text="(形式指定)"/></TextBlock>
                                </Border>
                            </ControlTemplate>
                        </Fluent:Button.Template>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="テキストタブ">
                    <Fluent:CheckBox Margin="0,0,0,0" Header="右端で折り返し" x:Name="TextWrapping" />



                    <Fluent:ComboBox Margin="-8,0,0,0" TextSearch.TextPath="EncodingName"  ItemsSource="{Binding Encodings}"
                                     SelectedItem="{Binding SelectedEncoding.Value}" IsEditable="False"
                                     IsReadOnly="True" Style="{DynamicResource ComboBoxStyle1}"
                                     Width="120px">
                        <Fluent:ComboBox.Resources>
                            <Style x:Key="ComboBoxStyle1" TargetType="{x:Type Fluent:ComboBox}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Fluent:ComboBox}">
                                            <ControlTemplate.Resources>
                                                <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type ScrollViewer}">
                                                            <Setter Property="Template" Value="{DynamicResource ScrollViewerControlTemplate}"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Style.BasedOn>
                                                </Style>
                                                <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type ScrollBar}">
                                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="Orientation" Value="Horizontal">
                                                                    <Setter Property="Width" Value="Auto"/>
                                                                    <Setter Property="Template" Value="{DynamicResource HorizontalScrollBarWhite}"/>
                                                                    <Setter Property="Height" Value="17"/>
                                                                </Trigger>
                                                                <Trigger Property="Orientation" Value="Vertical">
                                                                    <Setter Property="Height" Value="Auto"/>
                                                                    <Setter Property="Template" Value="{DynamicResource VerticalScrollBarWhite}"/>
                                                                    <Setter Property="Width" Value="17"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Style.BasedOn>
                                                </Style>
                                            </ControlTemplate.Resources>
                                            <Border Background="#00000000" Height="22" Width="Auto">
                                                <Grid Background="#00000000" Height="Auto" Width="Auto">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel x:Name="stackPanel" Grid.ColumnSpan="1" HorizontalAlignment="Stretch" Margin="0,0,4,0" Orientation="Horizontal">
                                                        <ContentPresenter x:Name="iconImage" Height="16" Margin="3,0,0,0" VerticalAlignment="Center" Width="16">
                                                            <ContentPresenter.Content>
                                                                <Binding Path="Icon" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <Fluent:ObjectToImageConverter/>
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </ContentPresenter.Content>
                                                        </ContentPresenter>
                                                        <TextBlock x:Name="textBlock" Margin="5,0,0,0" TextWrapping="Wrap" Text="{TemplateBinding Header}" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                    <Border x:Name="PART_ContentBorder" BorderBrush="{DynamicResource TextBoxBorderBrush}" BorderThickness="1" Background="{DynamicResource TextBoxBackgroundBrush}" Grid.ColumnSpan="1" Grid.Column="1" HorizontalAlignment="Right" Height="Auto" Width="{TemplateBinding InputWidth}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="13"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Fluent:ToggleButton x:Name="ToggleButton" BorderThickness="0" ClickMode="Press" Grid.ColumnSpan="2" CanAddToQuickAccessToolBar="False" Focusable="False" Height="Auto" IsDefinitive="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" Style="{DynamicResource RibbonComboButtonStyle}" VerticalAlignment="Stretch"/>
                                                            <ContentPresenter x:Name="PART_ContentSite" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" HorizontalAlignment="Left" IsHitTestVisible="False" Margin="3,0" VerticalAlignment="Center"/>
                                                            <Image x:Name="PART_SelectedImage" HorizontalAlignment="Left" Height="Auto" IsHitTestVisible="False" Margin="0" Stretch="None" Visibility="Collapsed" VerticalAlignment="Center" Width="Auto"/>
                                                            <TextBox x:Name="PART_EditableTextBox" BorderThickness="0" Background="{DynamicResource TextBoxBackgroundBrush}" Focusable="True" HorizontalAlignment="Stretch" IsReadOnly="{TemplateBinding IsReadOnly}" TextWrapping="NoWrap" Visibility="Hidden" VerticalAlignment="Stretch" VerticalContentAlignment="Center"/>
                                                        </Grid>
                                                    </Border>
                                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" Margin="0,0,-4,0" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" VerticalAlignment="Top">
                                                        <Popup.Resources>
                                                            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                                                <Style.BasedOn>
                                                                    <Style TargetType="{x:Type ScrollBar}">
                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                        <Style.Triggers>
                                                                            <Trigger Property="Orientation" Value="Horizontal">
                                                                                <Setter Property="Width" Value="Auto"/>
                                                                                <Setter Property="Template" Value="{DynamicResource HorizontalScrollBarWhite}"/>
                                                                                <Setter Property="Height" Value="17"/>
                                                                            </Trigger>
                                                                            <Trigger Property="Orientation" Value="Vertical">
                                                                                <Setter Property="Height" Value="Auto"/>
                                                                                <Setter Property="Template" Value="{DynamicResource VerticalScrollBarWhite}"/>
                                                                                <Setter Property="Width" Value="17"/>
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Style.BasedOn>
                                                            </Style>
                                                        </Popup.Resources>
                                                        <Grid x:Name="DropDown" Margin="0" SnapsToDevicePixels="True" VerticalAlignment="Top">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="4"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="4"/>
                                                            </Grid.RowDefinitions>
                                                            <Rectangle Grid.Column="1" HorizontalAlignment="Left" Height="4" Margin="-1,-1,0,0" Grid.Row="1" StrokeThickness="0" VerticalAlignment="Top" Width="4">
                                                                <Rectangle.Fill>
                                                                    <RadialGradientBrush Center="0.017,0.002" GradientOrigin="0.017,0.002" RadiusY="1" RadiusX="0.984">
                                                                        <GradientStop Color="#3F000000" Offset="0"/>
                                                                        <GradientStop Color="#00000000" Offset="1"/>
                                                                    </RadialGradientBrush>
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                            <Rectangle Grid.Column="1" HorizontalAlignment="Left" Height="4" Margin="-1,3,0,0" Grid.Row="0" StrokeThickness="0" VerticalAlignment="Top" Width="4">
                                                                <Rectangle.Fill>
                                                                    <RadialGradientBrush Center="0.032,1.01" GradientOrigin="0.032,1.01" RadiusY="1" RadiusX="0.984">
                                                                        <GradientStop Color="#3F000000" Offset="0"/>
                                                                        <GradientStop Color="#00000000" Offset="1"/>
                                                                    </RadialGradientBrush>
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                            <Rectangle Grid.Column="0" HorizontalAlignment="Left" Height="4" Margin="3,-1,0,0" Grid.Row="1" StrokeThickness="0" VerticalAlignment="Top" Width="4">
                                                                <Rectangle.Fill>
                                                                    <RadialGradientBrush Center="0.996,0.027" GradientOrigin="0.996,0.027" RadiusY="1" RadiusX="0.984">
                                                                        <GradientStop Color="#3F000000" Offset="0"/>
                                                                        <GradientStop Color="#00000000" Offset="1"/>
                                                                    </RadialGradientBrush>
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                            <Rectangle Grid.Column="0" HorizontalAlignment="Stretch" Height="4" Margin="7,-1,1,0" Grid.Row="1" StrokeThickness="0" VerticalAlignment="Top" Width="Auto">
                                                                <Rectangle.Fill>
                                                                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                                                        <GradientStop Color="#3F000000" Offset="0"/>
                                                                        <GradientStop Color="#00000000" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                            <Rectangle Grid.Column="1" HorizontalAlignment="Left" Height="Auto" Margin="-1,7,0,1" Grid.Row="0" StrokeThickness="0" VerticalAlignment="Stretch" Width="4">
                                                                <Rectangle.Fill>
                                                                    <LinearGradientBrush EndPoint="1,0.5" MappingMode="RelativeToBoundingBox" StartPoint="0,0.5">
                                                                        <GradientStop Color="#3F000000" Offset="0"/>
                                                                        <GradientStop Color="#00000000" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                            <Border x:Name="PART_DropDownBorder" BorderBrush="{DynamicResource ContextMenuBarBorderBrush}" BorderThickness="1" Background="{DynamicResource ContextMenuBarBackgroundBrush}" Grid.ColumnSpan="1" CornerRadius="1" HorizontalAlignment="Stretch" Margin="0" MinWidth="{Binding ActualWidth, ElementName=PART_ContentBorder}" SnapsToDevicePixels="True" VerticalAlignment="Top">
                                                                <Grid KeyboardNavigation.DirectionalNavigation="Cycle" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Top" Width="Auto">
                                                                    <Border BorderBrush="{DynamicResource ContextMenuBarBackgroundBrush}" BorderThickness="1" CornerRadius="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto"/>
                                                                    <Grid HorizontalAlignment="Stretch" Margin="1" VerticalAlignment="Top">
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Rectangle Fill="{x:Null}" HorizontalAlignment="Left" Height="Auto" Margin="24,0,0,0" Grid.RowSpan="3" Stretch="Fill" Stroke="#FFE2E4E7" Visibility="Visible" VerticalAlignment="Stretch" Width="1"/>
                                                                        <ContentControl x:Name="upResizeContent"/>
                                                                        <Grid x:Name="PART_MenuPanel" MaxHeight="{TemplateBinding MaxDropDownHeight}" Grid.Row="1" VerticalAlignment="Top">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*"/>
                                                                                <RowDefinition Height="Auto"/>
                                                                            </Grid.RowDefinitions>
                                                                            <StackPanel>
                                                                                <ScrollViewer x:Name="PART_ScrollViewer" BorderBrush="{DynamicResource GalleryBorderBrush}" BorderThickness="0,0,0,1" KeyboardNavigation.DirectionalNavigation="None" Focusable="False" Margin="1" SnapsToDevicePixels="True" VerticalAlignment="Stretch">
                                                                                    <Fluent:GalleryPanel x:Name="PART_GalleryPanel" Background="White" KeyboardNavigation.DirectionalNavigation="None" GroupBy="{TemplateBinding GroupBy}" IsItemsHost="True" ItemHeight="{TemplateBinding ItemHeight}" Orientation="Vertical"/>
                                                                                </ScrollViewer>
                                                                                <Border BorderThickness="1" Height="1" BorderBrush="LightGray" />
                                                                                <Fluent:Button SizeDefinition="Middle">その他のエンコーディング</Fluent:Button>
                                                                            </StackPanel>

                                                                            <ContentPresenter x:Name="menuPresenter" Content="{TemplateBinding Menu}" ContentSource="Menu" KeyboardNavigation.DirectionalNavigation="None" Grid.Row="1" VerticalAlignment="Top"/>
                                                                        </Grid>
                                                                        <ContentControl x:Name="downResizeContent" Grid.Row="2">
                                                                            <Border x:Name="resizeBorder" BorderBrush="{DynamicResource ContextMenuBarResizeBorderBrush}" BorderThickness="0,1,0,0" Background="{DynamicResource ContextMenuBarResizeBackgoundBrush}" CornerRadius="0,0,1,1" HorizontalAlignment="Stretch" Height="11" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top">
                                                                                <Grid>
                                                                                    <Thumb x:Name="PART_ResizeVerticalThumb" Cursor="SizeNS" HorizontalAlignment="Stretch" Height="10" Margin="0,0,0,-90" Template="{DynamicResource ResizeVerticalThumbControlTemplate}" VerticalAlignment="Top" Width="Auto"/>
                                                                                    <Thumb x:Name="PART_ResizeBothThumb" Cursor="SizeNWSE" HorizontalAlignment="Right" Height="10" Margin="0,0,0,-90" Template="{DynamicResource ResizeBothThumbControlTemplate}" VerticalAlignment="Top" Width="10"/>
                                                                                </Grid>
                                                                            </Border>
                                                                        </ContentControl>
                                                                    </Grid>
                                                                </Grid>
                                                            </Border>
                                                        </Grid>
                                                    </Popup>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ShowPopupOnTop" Value="True">
                                                    <Setter Property="Content" TargetName="downResizeContent" Value="{x:Null}"/>
                                                    <Setter Property="Content" TargetName="upResizeContent" Value="{Binding ElementName=resizeBorder}"/>
                                                    <Setter Property="CornerRadius" TargetName="resizeBorder" Value="1,1,0,0"/>
                                                    <Setter Property="Cursor" TargetName="PART_ResizeBothThumb" Value="SizeNESW"/>
                                                    <Setter Property="LayoutTransform" TargetName="PART_ResizeBothThumb">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="LayoutTransform" TargetName="PART_ResizeVerticalThumb">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="Menu" Value="{x:Null}">
                                                    <Setter Property="BorderThickness" TargetName="PART_ScrollViewer" Value="0"/>
                                                </Trigger>
                                                <Trigger Property="ResizeMode" Value="None">
                                                    <Setter Property="Visibility" TargetName="resizeBorder" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="ResizeMode" Value="Both">
                                                    <Setter Property="Visibility" TargetName="PART_ResizeVerticalThumb" Value="Collapsed"/>
                                                    <Setter Property="Visibility" TargetName="PART_ResizeBothThumb" Value="Visible"/>
                                                    <Setter Property="Visibility" TargetName="resizeBorder" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="ResizeMode" Value="Vertical">
                                                    <Setter Property="Visibility" TargetName="PART_ResizeBothThumb" Value="Collapsed"/>
                                                    <Setter Property="Visibility" TargetName="PART_ResizeVerticalThumb" Value="Visible"/>
                                                    <Setter Property="Visibility" TargetName="resizeBorder" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="Icon" Value="{x:Null}">
                                                    <Setter Property="Visibility" TargetName="iconImage" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="InputWidth" Value="NaN">
                                                    <Setter Property="HorizontalAlignment" TargetName="PART_ContentBorder" Value="Stretch"/>
                                                </Trigger>
                                                <Trigger Property="Size" Value="Middle">
                                                    <Setter Property="Visibility" TargetName="textBlock" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="Size" Value="Small">
                                                    <Setter Property="Visibility" TargetName="stackPanel" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="IsEnabled" TargetName="PART_EditableTextBox" Value="False"/>
                                                    <Setter Property="Background" TargetName="PART_ContentBorder" Value="{DynamicResource TextBoxDisabledBackgroundBrush}"/>
                                                    <Setter Property="BorderBrush" TargetName="PART_ContentBorder" Value="{DynamicResource TextBoxDisabledBorderBrush}"/>
                                                    <Setter Property="BorderBrush" TargetName="PART_EditableTextBox" Value="{DynamicResource TextBoxDisabledBackgroundBrush}"/>
                                                    <Setter Property="Opacity" TargetName="iconImage" Value="0.5"/>
                                                    <Setter Property="Opacity" TargetName="textBlock" Value="0.5"/>
                                                    <Setter Property="Effect" TargetName="iconImage">
                                                        <Setter.Value>
                                                            <Fluent:GrayscaleEffect/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="PART_ContentBorder" Value="{DynamicResource TextBoxHoverBorderBrush}"/>
                                                    <Setter Property="Background" TargetName="PART_EditableTextBox" Value="{DynamicResource TextBoxHoverBackgroundBrush}"/>
                                                    <Setter Property="Background" TargetName="PART_ContentBorder" Value="{DynamicResource TextBoxHoverBackgroundBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="PART_ContentBorder" Value="{DynamicResource TextBoxHoverBorderBrush}"/>
                                                    <Setter Property="Background" TargetName="PART_EditableTextBox" Value="{DynamicResource TextBoxHoverBackgroundBrush}"/>
                                                    <Setter Property="Background" TargetName="PART_ContentBorder" Value="{DynamicResource TextBoxHoverBackgroundBrush}"/>
                                                </Trigger>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter Property="MinHeight" TargetName="PART_DropDownBorder" Value="95"/>
                                                </Trigger>
                                                <Trigger Property="IsGrouping" Value="True">
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </Trigger>
                                                <Trigger Property="IsEditable" Value="True">
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                                    <Setter Property="Visibility" TargetName="PART_ContentSite" Value="Hidden"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}"/>
                                <Setter Property="IsEditable" Value="True"/>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="ItemContainerStyleSelector" Value="{x:Null}"/>
                                            <Condition Property="IsEditable" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="ItemContainerStyle" Value="{DynamicResource EditableComboBoxItemStyle}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="ItemContainerStyleSelector" Value="{x:Null}"/>
                                            <Condition Property="IsEditable" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="ItemContainerStyle" Value="{DynamicResource NonEditableComboBoxItemStyle}"/>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:ComboBox.Resources>
                        <Fluent:ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type text:EncodingInfo}">
                                <TextBlock Text="{Binding EncodingName}"/>
                            </DataTemplate>
                        </Fluent:ComboBox.ItemTemplate>
                    </Fluent:ComboBox>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="バージョン情報">
                    <Fluent:TwoLineLabel Text="ClipboardPeek v1.0"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ListView  x:Name="ListBox" Grid.Column="0" VerticalAlignment="Stretch"
                       ItemsSource="{Binding Formats.Value}" SelectedItem="{Binding SelectedFormat.Value}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="ID" DisplayMemberBinding="{Binding Format.FormatId.Id}" />
                        <GridViewColumn Header="名前" DisplayMemberBinding="{Binding Format.FormatId.NativeName}" />
                        <GridViewColumn Header="定数名" DisplayMemberBinding="{Binding Format.FormatId.ConstantName}"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Width="2" />
            <TabControl Grid.Column="2">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Padding" Value="10,5,10,5" />
                    </Style>
                </TabControl.Resources>
                <TabItem Header="基本情報">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="2" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ListView Grid.Row="0" ItemsSource="{Binding BasicInfo.Value}" >
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Key" Width="100" DisplayMemberBinding="{Binding Key}" />
                                    <GridViewColumn Header="Value" Width="200">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Value, Mode=OneWay}" IsReadOnly="True" BorderBrush="Transparent" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <!--   <TextBox Text="{Binding SelectedItem.Tymed,ElementName=ListBox,Mode=OneWay}"></TextBox> -->

                        <GridSplitter Grid.Row="1" VerticalAlignment="Stretch" Height="2" />
                        <Grid Grid.Row="2">
                            
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="テキスト&#xA;/ダンプ">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="2" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBox Text="{Binding Text.Value, Mode=OneWay}" IsReadOnly="True">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsChecked, ElementName=TextWrapping}" Value="True">
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>

                        </TextBox>
                        <GridSplitter Grid.Row="1" />
                        <Grid Grid.Row="2" x:Name="HexGrid"/>
                    </Grid>
                </TabItem>
                <TabItem Header="ファイル">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="97*"/>
                            <ColumnDefinition Width="243*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TreeView Grid.Row="0" ItemsSource="{Binding Files.Value}" Grid.ColumnSpan="2" Margin="0,0,0,189.667" Grid.RowSpan="3">
                            <TreeView.Resources>
                                <DataTemplate DataType="{x:Type dataFormatLib:FileDescriptor}">
                                    <TextBlock Text="{Binding FileName}"></TextBlock>
                                </DataTemplate>

                                <DataTemplate DataType="{x:Type system:String}" x:Key="FileTreeViewStringTemplate">
                                    <TextBlock Text="{Binding FileName}"></TextBlock>
                                </DataTemplate>
                            </TreeView.Resources>
                        </TreeView>


                        <GridSplitter Grid.Row="1" Grid.Column="1" Margin="0,0.333,0,189.667" Grid.RowSpan="2"/>


                        <ListView Grid.Row="2" ItemsSource="{Binding BasicInfo}" Grid.ColumnSpan="2" Margin="0,0.333,0,-0.333" >
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Key" DisplayMemberBinding="{Binding Key}" />
                                    <GridViewColumn Header="Value">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Value, Mode=OneWay}" IsReadOnly="True" BorderBrush="Transparent" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </TabItem>

                <TabItem Header="画像">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <Label>幅:</Label>
                            <Label Content="{Binding Image.Value.Width}" />
                            <Label>高さ</Label>
                            <Label Content="{Binding Image.Value.Height}" />
                        </StackPanel>
                        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" CanContentScroll="True">
                            <StackPanel>
                                <Image Stretch="Fill" Source="{Binding Image.Value}"
                                   Width="{Binding RelativeSource={RelativeSource Self}, Path=Source.PixelWidth}"
                                   Height="{Binding RelativeSource={RelativeSource Self}, Path=Source.PixelHeight}"
                                   Visibility="{Binding RelativeSource={RelativeSource Self},Path=ImageVisibility.Value}"/>
                                <InkCanvas EditingMode="None" IsEnabled="False" Strokes="{Binding InkStrokes.Value}" Visibility="{Binding InkCanvasVisibility.Value}" />
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem Header="Rtf">
                    <xctk:RichTextBox x:Name="_richTextBox" Grid.Row="1" BorderBrush="Gray" FontFamily="Meiryo UI"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto" Text="{Binding Rtf.Value}">
                        <xctk:RichTextBox.TextFormatter>
                            <xctk:RtfFormatter />
                        </xctk:RichTextBox.TextFormatter>
                    </xctk:RichTextBox>
                </TabItem>
                <TabItem Header="HTML">
                    <RichTextBox></RichTextBox>
                </TabItem>
            </TabControl>
        </Grid>
    </DockPanel>

</Fluent:RibbonWindow>



